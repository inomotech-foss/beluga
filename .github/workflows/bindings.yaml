name: Bindings

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_INCREMENTAL: 0
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        build:
          [
            stable,
            beta,
            nightly,
            linux32,
            macos,
            aarch64-ios,
            win32,
            win64,
            mingw32,
            mingw64,
            windows-2019,
          ]
        include:
          - build: stable
            os: ubuntu-latest
            rust: stable
            target: x86_64-unknown-linux-gnu
          - build: beta
            os: ubuntu-latest
            rust: beta
            target: x86_64-unknown-linux-gnu
          - build: nightly
            os: ubuntu-latest
            rust: nightly
            target: x86_64-unknown-linux-gnu
          - build: linux32
            os: ubuntu-latest
            rust: stable
            target: i686-unknown-linux-gnu
          - build: macos
            os: macos-latest
            rust: stable
            target: x86_64-apple-darwin
          - build: aarch64-ios
            os: macos-latest
            rust: stable
            target: aarch64-apple-ios
            no_run: --no-run
          - build: windows-aarch64
            os: windows-latest
            rust: stable
            target: aarch64-pc-windows-msvc
            no_run: --no-run
          - build: win32
            os: windows-2019
            rust: stable-i686-msvc
            target: i686-pc-windows-msvc
          - build: win64
            os: windows-latest
            rust: stable
            target: x86_64-pc-windows-msvc
          - build: mingw32
            os: windows-latest
            rust: stable-i686-gnu
            target: i686-pc-windows-gnu
          - build: mingw64
            os: windows-latest
            rust: stable-x86_64-gnu
            target: x86_64-pc-windows-gnu
          - build: windows-2019
            os: windows-2019
            rust: stable-x86_64
            target: x86_64-pc-windows-msvc
    steps:
      - uses: actions/checkout@v4
      - uses: hecrj/setup-rust-action@v2
        with:
          rust-version: ${{ matrix.rust }}
          profile: minimal
          targets: ${{ matrix.target }}

      - name: Install g++-multilib
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install g++-multilib
        if: matrix.build == 'linux32'
      - run: cargo test ${{ (runner.debug && '-vv') || '' }} ${{ matrix.no_run }}
